apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    marketplace.openshift.io/remote-workflow: https://marketplace.redhat.com/en-us/operators/{package_name}/pricing?utm_source=openshift_console
    marketplace.openshift.io/support-workflow: https://marketplace.redhat.com/en-us/operators/\{package_name}/support?utm_source=openshift_conso
    alm-examples: |-
      [
        {
          "apiVersion": "ibm.aimodelfactory/v1",
          "kind": "Modelfactory",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "aimodelfactory-operator",
              "app.kubernetes.io/instance": "modelfactory-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "modelfactory",
              "app.kubernetes.io/part-of": "aimodelfactory-operator"
            },
            "name": "modelfactory-sample"
          },
          "spec": {
            "settings": {
              "artifactBucket": "modelfactory-artifact-research-dev",
              "cosRegion": "us-south",
              "cosaccesskeyidSecretName": "cos-access-key-id",
              "cosapikeySecretName": "cos-apikey",
              "cossecretaccesskeySecretName": "cos-secret-access-key",
              "dataBucket": "modelfactory-servicedata",
              "imagePullPolicy": "Always",
              "rayWorkerMaxReplicas": 2,
              "rayWorkerMinReplicas": 2,
              "rayWorkerReplicas": 2,
              "storageClassAccessModes": "ReadWriteMany",
              "storageClassName": "ibmc-file-gold-gid",
              "storageClassSize": "10Gi"
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: AI/Machine Learning, ODH, IBM
    operators.operatorframework.io/builder: operator-sdk-v1.25.1
    operators.operatorframework.io/project_layout: ansible.sdk.operatorframework.io/v1
  name: aimodelfactory-operator.v0.1.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: Modelfactory
      name: modelfactories.ibm.aimodelfactory
      version: v1
  description: |
    A Kubernetes operator to provision resources for IBM AIModelfactory. This operator is to be installed in a specific namespace.

    ### Introduction

    Recipe based AI project experience for Industrial Assets with in-built support of any time scale up and scale out.

    ### Why AI Model Factory?

    * **AI Model Factory** is a Model **Development** , **Training** and **Deployment** Platform, built for **highly scalable** use cases.
    * Unify various components of AI modeling steps via **Recipe** across **ML frameworks**.
    * Support Scalable **AI workload** with **Autoscaling** including **Scale to Zero on CPU/GPU.
    * Provide reusable factory patterns support for Multiple  **Industrial Assets** , **Applications** and **Models.**
    * **Generic** recipes for **building AI model** including  **anomaly detection** ,  **failure prediction** , etc with tight integration with IBM Product such as **Maximo.**
    * **Asset Class** specific **Industry Accelerators** Recipe to quickly demonstrate time to value for PoC.

    ### Pre-requisite

        1. Kuberay component for distributed wokloads from Open Data Hub.
            2. A few env variable to be set as secrets.

    Details are given below...

    * AI Modelfactory uses the Open Data Hub (ODH) operator for Ray distributed workload capabilities. Hence please ensure ODH v2 is installed on your cluster and has its Kuberay component installed.
    * `all-icr-io` imagePullSecret is created.
    * Other secrets that are required by Modefactory should be created, like `cos-apikey`, `cos-access-key-id`, `cos-secret-access-key`.

    You can follow this document [here](https://github.com/opendatahub-io/opendatahub-operator#installation) to install ODH v2 or use our `prerequisite.sh` to setup ODH v2 on your openshift cluster along with setting some other required secrets with help of `.env` file. this `.env` file should be created on the root folder.

    Sample `.env` file

    ```
    COS_APIKEY=
    COS_ACCESS_KEY_ID=
    COS_SECRET_ACCESS_KEY=
    OC_PROJECT=
    ```

    Once `.env` file is populated, you should...

    1. run `bash prerequisite.sh` if you already have Kuberay Operator from ODH v2 installed and do not want this script to install/update ODH.
    2. run `bash prerequisite.sh -i` or `bash prerequisite.sh --install` with `-i` or `--install` flag to install Kuberay with ODH v2 and setup the secrets.

    ### Install Operator from Redhat Marketplace.

    On your openshift cluster dashboard, Simply go to operators > OperatorHub and search for `AI Modelfactory`, and click install.

    ![image](https://media.github.ibm.com/user/1830/files/d0ed8c2a-a327-4445-a712-65aa841e78b4)
    ![image](https://media.github.ibm.com/user/1830/files/d4705f33-e85f-4dee-abfe-761b8dea6a6d)

    Select the targeted namespace and proceed with the install.

    ![image](https://media.github.ibm.com/user/1830/files/367f6451-0289-4174-8459-20beda42968f)

    Let the install process finish, once finished click on the installed operator tab.

    ![image](https://media.github.ibm.com/user/1830/files/40460fe1-e21a-4eb1-ac0b-a54485edd0a2)

    ### Install CR

    Select `IBM Modelfactory` operator, then `AI Modelfactory` Tab and `Create Modelfactory`

    ![image](https://media.github.ibm.com/user/1830/files/27814a17-e2dc-4787-91af-c3d40afc1a18)
    ![image](https://media.github.ibm.com/user/1830/files/484a3b66-29db-4249-bde4-d16a0d09e0e9)
    ![image](https://media.github.ibm.com/user/1830/files/ae9cda5b-c041-42d5-af5e-0a7b4f82f60e)

    Change CR yml parameters if required and then go ahead with `create`.

    ![image](https://media.github.ibm.com/user/1830/files/32f5da00-e3b7-4031-a4c4-5df65d2efb0a)
    ![image](https://media.github.ibm.com/user/1830/files/9df9ea51-9de4-45be-bde6-2ec268c7a926)

    Otherwise you can use a sample CR available at `aimodelfactory-operator/config/samples/ibm_v1_modelfactory.yaml`, you can simply apply it using following command.

    ```sh
    oc apply -f aimodelfactory-operator/config/samples/ibm_v1_modelfactory.yaml -n <namespace>
    ```

    Now, on Openshift dashboard, Go to Workloads > pods tab and verify all Modefactoy pods deployed in some time. Check logs of `aimodelfactory-operator-controller-manager-xxxxxxx-xxxxx` pod if in case deployment does not bring any pods or any pod fails.

    <!-- ![image](https://media.github.ibm.com/user/1830/files/130081c3-05f6-4c19-b5bd-2d98a246f378) -->

    ![image](https://media.github.ibm.com/user/1830/files/21798cf7-1fe4-49af-8e2c-478488024f14)

    ### Get Modelfactory API reference from the above deployment.

    Once all pods are up and running, go to routes and check `modelfactory-api` route, suffix it with `/apidocs` to check AI Modelfactory API Docs, or run below command from command line to get the API docs URL.

    ```sh
    echo $(oc get routes/modelfactory-api -o jsonpath='https://{.spec.host}{.spec.path}/apidocs' -n <namespace>)
    ```

    Sample link https://modelfactory-9ca4d14d48413d18ce61b80811ba4308-0000.us-south.containers.appdomain.cloud/ibm/modelfactory/service/apidocs

    ### Try Modelfactory Notebook Studio with few accelerators examples.

    Go to routes and check `modelfactory-nbstudio` route to logon to a jupyter notebook studio environment, along with modelfactory accelerator example to try. You can also run below command from command line to get the Notebook Studio URL.

    ```sh
    echo $(oc get routes/modelfactory-nbstudio -o jsonpath='https://{.spec.host}{.spec.path}' -n <namespace>)
    ```

    ### Cleanup

    Delete the `Modelfactory` CR followed by deleting the `IBM Modelfactory` operator from installed operator tab.
  displayName: AIModelfactory
  icon:
  - base64data: iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAABcElEQVRYhe2XTU7DMBCFv0laiSug/lyAFVlzAy7AAaASEuI0LFpYg9QdOxbcBIlN6S2QPSySpq7VxHEJ4ac8KZIn4zhvxs9jDew7ZDU4u9RTVZ0ZGBgFg/MoWM/2/Y69tCKT1zt5akKgtxr0lalBBqA5LfVoNreHqM6AcRSBFIYAD9NEqqeHcXRuFRg1nb8m4Ee1I9LI+W4GHEV8gkBkIJsEWkBsIGECo6s8nrcbafJ+9y34bg0k8K+B7fD3PvB+tc7JRMcGMmttZkQyA5lRDg0s30UmL0WlTMoPpZ0sJAWJA/LoeoWdrv8x7OeVEmhSB2JPQaGB51tZAAvg0fUfX1hF15Wycw34/q8hEOHvvA5UE4DtqYs9BYFAfP8v0ED0XVCfgvotaAH5OtUpSDy7exHWaqCDy6hSA35qSuxyF4RE6GAPC9FP00A5vL9WLbufotPx7ZpuaMO2Ab9BmRf9R5kBcIQY6oSazKm1W0j1n8EHUXSe3BupxdoAAAAASUVORK5CYII=
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - events
          - secrets
          - secrets/status
          - pods
          - pods/log
          - pods/exec
          - pods/attach
          - pods/portforward
          - pods/proxy
          - pods/files
          - configmaps
          - services
          - services/finalizers
          - endpoints
          - persistentvolumeclaims
          - serviceaccounts
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - update
          - create
          - list
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          - rolebindings
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          - routes/status
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes/custom-host
          verbs:
          - create
        - apiGroups:
          - route.openshift.io
          resources:
          - routes/status
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - ibm.aimodelfactory
          resources:
          - modelfactories
          - modelfactories/status
          - modelfactories/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ray.io
          resources:
          - rayclusters
          verbs:
          - get
          - update
          - create
          - delete
          - list
          - patch
          - watch
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - create
          - delete
          - deletecollection
          - patch
          - update
          - get
          - list
          - watch
        - apiGroups:
          - operators.coreos.com
          resources:
          - subscriptions
          - subscriptions/status
          - subscriptions/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - datasciencecluster.opendatahub.io
          resources:
          - datascienceclusters
          - datascienceclusters/status
          - datascienceclusters/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - kfdef.apps.kubeflow.org
          resources:
          - kfdefs
          - kfdefs/status
          - kfdefs/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        serviceAccountName: aimodelfactory-operator-entitymgr-modelfactory
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: aimodelfactory-operator
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: aimodelfactory-operator
          control-plane: controller-manager
        name: aimodelfactory-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                        - amd64
                        - arm64
                        - ppc64le
                        - s390x
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:6789
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=aimodelfactory-operator
                env:
                - name: ANSIBLE_GATHERING
                  value: explicit
                image: us.icr.io/aimodelfactory/aimodelfactory-operator:0.1.1
                imagePullPolicy: Always
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 6789
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 6789
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 768Mi
                  requests:
                    cpu: 10m
                    memory: 256Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              imagePullSecrets:
              - name: all-icr-io
              securityContext:
                runAsNonRoot: true
              serviceAccountName: aimodelfactory-operator-entitymgr-modelfactory
              terminationGracePeriodSeconds: 10
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - modelfactory
  links:
  - name: AIModelFactory Operator
    url: https://pages.github.ibm.com/srom/aimodelfactory_website/
  maintainers:
  - email: vivek.irl@in.ibm.com, pateldha@us.ibm.com, shuxin.lin@ibm.com
    name: IBM Modelfactory Maintainers
  maturity: stable
  provider:
    name: IBM
  selector:
    matchLabels:
      component: aimodelfactory-operator
  version: 0.1.1
